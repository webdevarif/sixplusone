@each $font, $family in $ff-list {
    .ff-#{$font}{
        font-family: $family !important;
    }
}

// @each $font, $size in $sizes-list {
//     .fs-#{$font}{
//         font-size: var(--heading-fs, #{$size}) !important;
//     }
// }

h1, h2, h3, h4, h5, h6, p, label{
    margin-bottom: rem(15px);
}

h1, h2, h3, h4, h5, h6{
    line-height: 100%;
}


// LINE HEIGHT
@each $key, $value in ( 'xs': 1, 'sm': 1.2, 'md':1.4, 'lg':1.8, 'xl':2, '2xl': 2.3, '3xl': 2.5) {
    .lh-#{$key}{line-height: $value !important;}
  }
  
  // LETTER SPACING
  @each $key, $value in ( 'xs': 1.5px, 'sm': 0.03em, 'md':0.07em, 'lg':0.1em, 'xl':0.13em, '2xl': 0.16em, '3xl': 0.2em) {
    .ls-#{$key}{letter-spacing: $value !important;}
  }
  
  @mixin make-custom-styles($columns: $grid-columns, $gutter: $grid-gutter-width, $breakpoints: $grid-breakpoints) {
    @each $breakpoint in map-keys($breakpoints) {
      $infix: breakpoint-infix($breakpoint, $breakpoints);
  
      @include media-breakpoint-up($breakpoint, $breakpoints) {
        // FONT SIZES
        @each $key, $value in $sizes-list {
          .fs#{$infix}-#{$key} {
            font-size: var(--heading-fs, #{$value}) !important;
          }
        }
      }
    }
  }
  
  @include make-custom-styles();